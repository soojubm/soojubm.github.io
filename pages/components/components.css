.component {
  transition: all .4s;
  --container-width: var(--layout-width-small);
}
.component-example {
  margin: 2rem -5vw 0 calc(-5vw + 1rem);
  padding: 2rem calc(var(--grid-margin) - 1rem);
  border-radius: var(--radius) var(--radius) 0 0;
  margin: 2rem 0 3rem calc(-5vw + 1rem);
  border: var(--border);
  border-bottom: 0;
  /* 
  // fallback for old browsers
  // background: -webkit-linear-gradient(to bottom, #155799, #159957);
  Chrome 10-25, Safari 5.1-6
  // background: linear-gradient(to bottom, #155799, #159957);
  W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  /* box-shadow: 0 1px 1px hsl(0deg 0% 0% / 0.0125),
  0 2px 2px hsl(0deg 0% 0% / 0.0125),
  0 4px 4px hsl(0deg 0% 0% / 0.0125),
  0 8px 8px hsl(0deg 0% 0% / 0.0125),
  0 16px 16px hsl(0deg 0% 0% / 0.0125); */
  background: var(--color-background);
}

.component-props {
  margin: 2rem 0 0 calc(-5vw + 1rem);
  padding: 1.75rem calc(var(--grid-margin) - 1rem) 1.875rem;
  margin-top: -3rem;
  border-radius: 0 0 var(--radius) var(--radius);
  background-color: var(--color-background-weak);
  position:relative;
}

.component-guide {
  margin: 1rem 0 0 calc(-5vw + 1rem);
  padding: 0 calc(var(--grid-margin) - 1rem) 4rem;
  border-radius: var(--radius);
  border: var(--border);
  /* max-width: var(--container-width);
  margin:3.5rem 0 4rem; */
}

.component-guide .checklist {
  margin: 2rem 0 0;
}

.component-case {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  align-content: center;
  max-height: 800px;
  gap: var(--space-4);

  margin:1rem -4vw -5rem calc(-5vw + 1rem);
  padding:4rem calc(var(--grid-margin) - 1rem) 6rem;
  border-top-left-radius: var(--radius);

  background: var(--color-background-strong);

  box-shadow: 0 1px 1px hsl(0deg 0% 0% / 0.0125),
  0 2px 2px hsl(0deg 0% 0% / 0.0125),
  0 4px 4px hsl(0deg 0% 0% / 0.0125),
  0 8px 8px hsl(0deg 0% 0% / 0.0125),
  0 16px 16px hsl(0deg 0% 0% / 0.0125)
}
.component-case > * {
  width: 100%;
  max-width: 400px;
}

.component-props mm-text {display:none}
.component-props dl {display:flex;flex-wrap:wrap;column-gap:var(--space-1);}
.component-props dl dt {font-weight:500;}
.component-props dl dt::after {content:':'}
.component-props dl dd {margin-right:var(--space-3);font-weight: var(--font-weight-bold);font-style:italic;;color:rgb(29, 161, 242)}
.component-props dl dd + dd {font-size:var(--font-size-small);color:var(--color-text);}

.component-references {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
  margin: 2rem 0;
  padding: 2rem 0 0;
  border-top: 4px dotted var(--color-border);
  & mm-text[variant=subhead] {
    display: none !important;
   
  }
  & a {
    color: var(--color-primary);
    font-weight: var(--font-weight-bold);
  }
}

.component-navigation {
  width:calc(100% + .25rem);
  box-sizing: border-box;
  background:var(--color-background);
  position:sticky;top:calc(var(--navbar-height));z-index:7;padding:var(--space-2) var(--grid-margin) !important;
  scroll-behavior: smooth;
}
.component-navigation-background {
  position: absolute;
  display: none;
}

/* 전체 영역에 해당 */
mm-text[variant=body-large] {max-width: var(--layout-width-small);}

mm-text[variant=title] + mm-text[variant=body-large] {
  display: block;
  margin: var(--space-after-title) 0 0;
}

mm-text[variant=body] + mm-text[variant=body] {
  display:block;
  margin:var(--space-3) 0 0;
}

/* [variant=body] + [variant=body-bold] {
  display:block;margin:var(--space-4) 0 0;
} */
mm-text[variant=body] + mm-text[variant=subhead] {
  display: block;
  margin: 3rem 0 0 0;
}

/* 타일 안에서 사용할 때 */
mm-tile [variant=subhead] + [variant=body] {
  display: block;
  margin: .25rem 0 0 0;
}

.component-guide [variant=subhead] + [variant=body], .component-guide [variant=subhead] + [variant=body-bold],
.component-guide [variant=subhead] + [variant=body-large] {
  display: block;
  margin: var(--space-after-subhead) 0 0 0;
}
.component-guide [variant=subhead] + ul {
  margin: var(--space-after-subhead) 0 0 0;
}
.component-guide [variant=subhead] + mm-tile {
  display: block;
  margin: var(--space-after-subhead) 0 0 0;
}

.article-aka {display:none;gap:var(--space-3);margin:2rem 0 0 0;}
.article-aka dt {margin: 0;}
.article-aka dd {margin: 0;}

.component-guide mm-text[variant=subhead] {display:block;margin-top:3rem;}
.component-guide ul, .component-guide dl {max-width: var(--layout-width-small);}

.spacing-card {padding:var(--space-inset-tile);overflow:hidden;position:relative;}
.space {display:flex;align-items:center;justify-content:center;height:100%;border-radius:var(--radius);background:var(--green100);position:relative;}
.space span {font-size:10px;}

/* // date */
.calendar {
  width: 250px;
  --date-width: 32px;
  --date-height: 32px;
  --date-background: #eee;
  position: relative;
}
.calendar h3 {
  font-size: 1rem;
  line-height: 32px;
}
.calendar-navigation {display:flex;position:absolute;right:0;top:0;font-size:var(--font-size-small);}
.calendar-navigation-prev {width:var(--date-width);height:var(--date-width);margin-right:4px;background:var(--date-background);border-radius:var(--radius);}
.calendar-navigation-next {width:var(--date-width);height:var(--date-width);background:var(--date-background);border-radius:var(--radius);}
.calendar-head {margin-top: .5rem !important;
  display: grid !important;
  grid-template-columns: repeat(7, 1fr) !important;
  gap: 4px !important;
  font-size:var(--font-size-small);
}
.calendar-head div {
  display: flex;
  justify-content: center;
  align-items: center;
  width:var(--date-width);height:var(--date-width);border-radius:var(--radius);
}
.calendar-body {
  display: grid !important;
  grid-template-columns: repeat(7, 1fr) !important;
  gap: 4px !important;
}
.calendar-body-column {
  display: flex;
  justify-content: center;
  align-items: center;
  width:var(--date-width);height:var(--date-width);border-radius:var(--radius);font-size:var(--font-size-small);
  cursor: pointer;
  &:hover {
    background: var(--color-primary);
    color: var(--gray0);
  }
}



@media (max-width: 1100px) {
  .component-example {
    margin-inline: calc(var(--grid-margin) * -1);
    padding-inline: var(--grid-margin);
    border-inline: 0;
    border-radius: 0;
  }

  .component-props {
    margin-inline: calc(var(--grid-margin) * -1);
    padding-inline: var(--grid-margin);
    border-inline: 0;
    border-radius: 0;
  }
}