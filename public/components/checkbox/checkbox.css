/* // rem 으로 모듈화하기 어렵다. ex 1.5rem => top:0.125rem
// line-heght로 리셋스타일에 종속되지 않도록 함. + block
// height 테이블 내에서 세로 정렬에 필요. 2줄 이상 레이블
// nextjs + css module에서 type selector 이슈 */



/* .checkbox:checked{
  background: linear-gradient(140deg, #ff6a6a 0%, #e6ff59 40%, #41c4fc 98%);
}

.checkbox::before{
  content: '';
  position: absolute;
  top: 55%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  pointer-events: none;
  background-image: url(check.png);
  background-size: contain;
  background-repeat: no-repeat;
} */

.checkbox {
  --checkbox-size: var(--size-tiny);
  --checkbox-radius: 4px;
  --checkbox-inset: var(--space-2);

  display: flex;
  align-items: center;
  min-height: var(--size-medium);
  gap: var(--space-2);
  /* line-height: var(--checkbox-size); */

  /* display: flex;
  flex-direction: column;
  justify-content: center;
  height: var(--size-medium); */

  /* menuitem 클릭 영ㅇ력을 위해 이거 없애야. */
  position: relative;

}

.checkbox input {
  /* reset */
  margin: 0; 

  display:block;
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  border: var(--border);
  border-color: var(--color-border-stronger);
  /* TODO border-color12 */
  border-radius: var(--checkbox-radius);
  background: var(--color-background);
  box-sizing: border-box;

  position: relative;

  /* opacity: 0;
  inline-size: 100%; */
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.checkbox input:checked {
  /* border-color: var(--color-primary);
  background: var(--color-primary); */

  /* --chkfg: #fff;
  --chkbg: #000;
  border: 0;
  background-image:
  linear-gradient(-45deg, transparent 65%, var(--chkbg) 65.99%),
  linear-gradient(45deg, transparent 75%, var(--chkbg) 75.99%),
  linear-gradient(-45deg, var(--chkbg) 40%, transparent 40.99%),
  linear-gradient(45deg, var(--chkbg) 30%, var(--chkfg) 30.99%, var(--chkfg) 40%, transparent 40.99%),
  linear-gradient(-45deg, var(--chkfg) 50%, var(--chkbg) 50.99%); */
}

.checkbox input:after {
  content:'';
  width:7px;
  height:2px;
  border-left:1px solid;
  border-bottom:1px solid;
  border-color:var(--gray200);
  position:absolute;
  left:4px;
  top:5px;
  transform:rotate(-50deg) scale(0);
}

/* checked */
.checkbox input {
  box-shadow: var(--shadow);
}
.checkbox input:checked:after {
  border-color:var(--color-primary);
  transform: rotate(-50deg) scale(1);
}

.checkbox label {
  line-height: 1;
}

.checkbox:focus-within label {
}


.checkbox input[indeterminate=true] ~ label:before,
.checkbox input[data-indeterminate=true] ~ label:before {border-color:var(--green800);background:var(--green100);}
.checkbox input[indeterminate=true] ~ label:after,
.checkbox input[data-indeterminate=true] ~ label:after {display:block;width:8px;background:var(--color-primary);border:none;left:4px;top:48%;transform:rotate(0deg);}

.checkbox input:disabled ~ label {opacity:.5;cursor:not-allowed;}

.checkbox-description {display:block !important;padding-left:calc(var(--size-tiny) + var(--space-2));color:var(--color-text-light);}

/* // hidden attribute */
input[type=radio] + label + *,
input[type=checkbox] + label + * {display:none;}
input[type=radio]:checked + label + *,
input[type=checkbox]:checked + label + * {display:block;}

/* // size */
.checkbox[data-size=large] {
  gap: var(--space-3);
}
.checkbox[data-size=large] input {
  --checkbox-size: var(--size-small);
}

.checkbox[data-size=large] input:checked:after {
  left:7px;
  top:8px;
  transform:rotate(-50deg) scale(1.5);
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }
  50% {
    background-position-y: -2px;
  }
  100% {
    background-position-y: 0;
  }
}