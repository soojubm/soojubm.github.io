/* host에서 정의하면 커스텀 엘리먼트가 아닐 .class로 사용할 때 못 가져온다. */
.button,
:host {
  --button-min-width: 5rem;
  --button-size: var(--size-large);
  --button-color: var(--color-background-weak);

  --button-border: 1px solid var(--button-color);
  --button-radius: var(--radius);

  /* TODO font / text */
  --button-text-color: 0;
  --button-font-size: inherit;
  --button-font-weight: var(--font-weight-bold);

  /*
  --button-color-background
  --button-color-border
  --button-color-text
  --button-space-inset
  --button-size-height
  --button-size-min-width
  */
}

.button {
  /* // reset */
  font-family: inherit;
  font-family: var(--font-family);
  font-size: inherit;

  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  min-width: var(--button-min-width);
  height: var(--button-size);
  padding: 0 var(--space-4) 2px;
  padding-bottom: 0;
  border: var(--button-border);
  border-radius: var(--button-radius);
  box-sizing: border-box;
  background: var(--button-color);

  font-size: var(--button-font-size);
  font-weight: var(--button-font-weight);
  color: var(--button-text-color);


  text-transform: capitalize;

  cursor: pointer;
}

/* variants */
.button[data-variant=primary] {
  --button-color: var(--color-primary);
  --button-text-color: var(--gray0);
}
.button[data-variant=secondary] {
  --button-color: var(--green100);
  --button-text-color: var(--color-primary);
}
.button[data-variant=tertiary] {
  --button-text-color: var(--color-text);
}
.button[data-variant=text] {
  --button-color: var(--color-background);
  --button-text-color: var(--color-primary);
}
.button[data-variant=destructive] {
  --button-color: var(--red800);
  --button-text-color: var(--gray0);
}

/* sizes */
.button[data-size=large] {
  --button-size: 64px;
  --button-font-size: var(--font-size-large);
  padding-bottom: 5px;
}
.button[data-size=small] {
  --button-size: 32px;
}
.button[data-isfullwidth=true] {
  width: 100%;
}

/* states */
.button:hover,
.button[data-status=hover] {
  box-shadow: var(--status-hover);
}
.button:focus,
.button[data-status=focus] {
  outline: 0;
  box-shadow: var(--status-focus);
}
.button:disabled,
.button[data-status=disabled] {opacity:.5;cursor:not-allowed;}
.button[aria-pressed=true] {}
.button:active:not(.a-button-disabled) {
  background: #F0B800;
  border-color: #008296;
  box-shadow: 0 0 0 3px #C8F3FA, inset 0 0 0 2px #FFF;
}
/* button:not(:active),
button:not(:focus) {outline:0;} */

/* &:hover:not(:disabled), &.is-hover:not(:disabled) {
  box-shadow: var(--status-hover);
}
*/
