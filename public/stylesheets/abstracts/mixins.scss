// ! text-heading-medium / text-heading-small
@mixin text-title {font-size:var(--font-size-huge);font-weight:var(--font-weight-bold);line-height:var(--font-line-height);color:var(--color-text);}
@mixin text-subhead {font-size:var(--font-size-large);font-weight:var(--font-weight-bold);color:var(--color-text);}
@mixin text-body {font-size:.875rem;font-weight:var(--font-weight-normal);}
@mixin text-body-large {font-size:var(--font-size-large);font-weight:var(--font-weight-normal);}
@mixin text-label {font-size:var(--font-size-medium);font-weight:var(--font-weight-normal);color:var(--color-text-light);}
@mixin text-caption {font-size:var(--font-size-small);font-weight:var(--font-weight-bold);}

@mixin truncate {white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}
@mixin truncate-multi {@include truncate;height:3rem;white-space:normal;word-wrap:break-word;display: -webkit-box;-webkit-line-clamp:2;-webkit-box-orient: vertical;}

@mixin link-inner {
  color:var(--color-primary);
  text-decoration:underline;
  &:hover {text-decoration:none;}
}
@mixin link-outside {
  color:var(--color-primary);
  &:hover {text-decoration:underline;}
}

.text-subhead {@include text-subhead;}
.link-inner {@include link-inner;}
.link-outside {@include link-outside;}

@mixin image-centered {width:auto;height:auto;max-width:150%;max-height:150%;margin:auto;position:absolute;left:0;right:0;top:0;bottom:0;}
@mixin bleeding {
	margin: 0 -50vw;
	position: absolute;
	left: 50%;
	right: 50%;
	top: 0;
	bottom: 0;
	z-index: -1;
}


@mixin clearfix {
  &:after {content:'';display:block;clear:both;}
}

@mixin hover-text {text-decoration:underline;}
@mixin hover-item {
  --hover-outline: calc(var(--space-3) / 2 * -1);
  // background: var(--color-background-weak) !important;
  // box-shadow: 0 0 0 4px var(--color-background-weak) !important;

  // item in card component // active
  cursor: pointer;
  &:before {

    // z-idnex 이슈
    content:'';
    display:block;
    background-color:var(--color-background-weak);
    border-radius:var(--radius);
    position:absolute;
    left:var(--hover-outline);right:var(--hover-outline);top:var(--hover-outline);bottom:var(--hover-outline);
    z-index: -1;
  }
  figure {box-shadow:var(--shadow) !important;}
}
.is-hoverable {@include hover-item;}


// mobile padding 패딩은 page-head에서 주는 게 좋음. -margin 주는 게 좋을 듯.
@mixin layout($size: 800px) {
  max-width: $size;
  margin: 0 auto;
  padding: 2rem var(--grid-margin) 8rem; // todo padding-top
  position: relative;
}

@mixin layout-large {@include layout(var(--layout-width-large));}
@mixin layout-medium {@include layout(var(--layout-width-small));}
@mixin layout-small {@include layout(var(--layout-width-tiny));}

// todo 자식이 elevated일 때...
@mixin stack {
  display:flex;flex-wrap:wrap;align-items:center;margin:var(--space-1-minus);
  > * {
    margin:var(--space-1);
  }
}

// todo flex일 대 min-width가 필수가 된다.. margin/padding은 container에 의존
@mixin stack-vertical-scroll {
  display:flex; // 중복
  flex-wrap: nowrap;
  white-space:nowrap;
  overflow:auto;

  scroll-behavior: smooth;
  > * {min-width:auto;}
  &::-webkit-scrollbar {display:none;}
}

.stack {display:flex;flex-wrap:wrap;align-items:center;margin:var(--space-1-minus)}
.stack > * {margin:var(--space-1);}
.stack[data-scroll=vertical] {@include stack-vertical-scroll;}
.stack[data-align=left] {}
.stack[data-align=right] {}
.stach[data-is-fluid=true] {} // space-between + column width

// 랜딩 페이지와 제품의 클래스 방법론을 달라져야 함. 결국, 제품에는 유틸성... => 유틸성이란 결국 컴포넌트. 가이드 문서이기 때문에 유틸성 클래스가 필요함.
@mixin position-left-top {position:absolute;left:var(--space-1);top:var(--space-1);}
@mixin position-right-top {position:absolute;right:var(--space-2);top:var(--space-2);}
@mixin position-bottom {position:fixed;left:0;right:0;bottom:0;z-index:var(--zindex-menu);}
@mixin reset-position {
  position: relative;
  left: auto;
  right: auto;
  top: auto;
  bottom: auto;
  transform: none;
}


@mixin tag {
  display: inline-flex;
  align-items: center;
  height: var(--size-small);
  padding: 2px var(--space-2) 0;
  border-radius: var(--radius);
  border: var(--border);
  box-sizing: border-box;
  background: var(--color-background);
  font-size: var(--font-size-small);
  color: var(--color-text);
}
@mixin tag-primary {@include tag;border-color:var(--color-accent);background-color:var(--color-accent);color:var(--gray800);}

@mixin hashtag {
  color: var(--color-text-light);
  &:before {content:'#';}
}

// @media (prefers-color-scheme: dark) {
//   :root {
//     // --title-color: #EFEFEF;
//     // --desc-color: peachpuff;
//   }
//   // img {filter: brightness(.8) contrast(1.2);}
// }